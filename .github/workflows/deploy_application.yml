name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Configure PHP 7.4
      uses: shivammathur/setup-php@master
      with:
        php-version: 7.4
        extensions: imagick, swoole, zip, mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, pdo

    - uses: actions/checkout@v2

    - name: Composer install
      run: |
        composer install --no-dev --no-interaction --prefer-dist --no-progress

    - name: Install assets
      run: |
        php bin/console assets:install public

    - name: Install ckeditor
      run: |
        php bin/console ckeditor:install public/build/ckeditor --clear=drop --release=custom --custom-build-id=0097efeeee383ee7fcc427e86e6f0229

    - name: Cache node_modules
      uses: actions/cache@v1
      id: yarn-cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-cache-node-modules-

    - name: Yarn install
      if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
      run: yarn install

    - name: Yarn build
      run: yarn run encore production

    - name: provide secrets
      env:
        SYMFONY_DECRYPTION_SECRET: ${{ secrets.SYMFONY_DECRYPTION_SECRET }}
      run: php bin/console secrets:decrypt-to-local --force --env=prod

#    - name: Compile CSS and Javascript
#      run: |
#        npm install
#        npm run prod

    - name: Create deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: tar -cpzf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests --exclude=var --exclude=assets --exclude=./build --exclude=.docker --exclude=docker-compose.yml --exclude=phpcs.xml.dist --exclude=phpmd.xml --exclude=phpstan.neon --exclude=phpstan-tests.neon --exclude=phpunit.xml.dist .

    - name: Store artifact for distribution
      uses: actions/upload-artifact@v2
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
