name: PHP Composer

on:
  push:
    branches: [ main ]
    tags:
    - 'v*'
  pull_request:
    branches: [ main ]
    tags:
    - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: imagick, swoole, zip, mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, pdo

    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: provide secrets
      env:
        SYMFONY_DECRYPTION_SECRET: ${{ secrets.SYMFONY_DECRYPTION_SECRET }}
      run: php bin/console secrets:decrypt-to-local --force --env=prod

    - name: Check that environment is configured correctly
      run: php ./vendor/bin/requirements-checker

    - name: PHP Security Checker
      # You may pin to the exact commit or the version.
      # uses: StephaneBour/actions-php-security-checker@7f98a3edeb22cd897f900592481157b4248355d5
      uses: StephaneBour/actions-php-security-checker@1.1
#      with:
        # Path to composer.lock
#        composer-lock: # optional, default is ./composer.lock

    - name: prepare php-cs-fixer config
      run: cp .php-cs-fixer.dist.php .php-cs-fixer.php

    - name: php-codesniffer
      # You may pin to the exact commit or the version.
      # uses: pipeline-components/php-codesniffer@e3341450afba37fab4275b31f041646a26b2da9d
      uses: pipeline-components/php-codesniffer@v0.12.3
      with:
        # Directory to check
        directory: src
        # Additional options
#        options: # optional, default is -s -p --colors --extensions=php
        # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
        # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

#    - name: PHPStan (php-actions)
#      # You may pin to the exact commit or the version.
#      # uses: php-actions/phpstan@e1ce60d6e66d508e78ddeefac1ec81570b8ef27d
#      uses: php-actions/phpstan@v2
#      with:
#        # What version of PHPStan to use
##        version: # optional, default is latest
#        # What version of PHP to use
##        php_version: # optional, default is latest
#        # Space separated list of extensions to configure with the PHP build
##        php_extensions: # optional
#        # The command to run (analyse [default], clear-result-cache, dump-deps, help, list, worker)
#        command: analyse
#        # Path(s) with source code to run analysis on
#        path: src
#        # Configuration file location
##        configuration: # optional
#        # Level of rule options - the higher, the stricter
##        level: # optional
#        # Path to a file with a list of paths to run analysis on
##        paths_file: # optional
#        # Project's additional autoload file path
##        autoload_file: # optional
#        # Format in which to print the result of the analysis
##        error_format: # optional
#        # Path to a file where the baseline should be saved
##        generate_baseline: # optional
#        # Memory limit for analysis
##        memory_limit: # optional
#        # Extra arguments to pass to the phpstan binary
##        args: # optional

    - name: PHP Code Style Fixer (php-cs-fixer)
      # You may pin to the exact commit or the version.
      # uses: StephaneBour/actions-php-cs-fixer@51db30c2569c3a6e4ebf68d63d2bdb65a5b914e6
      uses: StephaneBour/actions-php-cs-fixer@8.0-v3
      with:
        # Folder to check code style
        dir: src

    - name: PHPUnit for Symfony
      # You may pin to the exact commit or the version.
      # uses: chindit/actions-phpunit-symfony@c02bff1f84d757d030c15e2985be601cdba3039e
      uses: chindit/actions-phpunit-symfony@1.0.0

    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      uses: SonarSource/sonarcloud-github-action@v1.6
#      with:
        # Additional arguments to the sonarcloud scanner
#        args: # optional
        # Set the sonar.projectBaseDir analysis property
#        projectBaseDir: # optional, default is .

    - name: tag-version
      # You may pin to the exact commit or the version.
      # uses: juliansangillo/tag-version@0ca10cb901a4e3273715c4443e5dec5ad8f40328
      uses: juliansangillo/tag-version@v1.5
      with:
        # The branch to use for stable releases in production. Default is master
        production-branch: main # optional, default is master
        # The branch to use for test deployments. Default is test
        test-branch: test # optional, default is test
        # The branch to use for dev deployments. Default is develop
        dev-branch: development # optional, default is develop
